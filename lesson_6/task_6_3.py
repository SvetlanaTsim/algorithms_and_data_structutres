'''
1. Подсчитать, сколько было выделено памяти под переменные
в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов
кода для одной и той же задачи. Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.

Python 3.9.4
Windows 10  64-разрядная ОС, процессор x64
'''

'''
2_2. Посчитать четные и нечетные цифры введенного натурального числа.
 Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
'''
import sys

num = input('Введите натуральное число: ')

even_num = [i for i in list(map(int, list(num))) if i % 2 == 0]
odd_num = [i for i in list(map(int, list(num))) if i % 2 != 0]

print(f'Четные:{even_num}, количество: {len(even_num)}')
print(f'Нечетные:{odd_num }, количество: {len(odd_num )}')

print(f'Размеры переменных следующие:\nnum {sys.getsizeof(num)}\neven_num {sys.getsizeof(even_num)}'
      f'\nodd_num {sys.getsizeof(odd_num)}')
print(f'Количество ссылок на переменные следующее:\nnum {sys.getrefcount(num)}\neven_num {sys.getrefcount(even_num)}'
      f'\nodd_num{sys.getrefcount(odd_num)}')

'''
Размеры переменных следующие:
num 53
even_num 88
odd_num 88
Количество ссылок на переменные следующее:
num 2
even_num 2
odd_num2

Получается строка num (input вернул число в виде строки) хранит 53 байта
А два списка по 2 элемента хранят по 88 байт.
'''
