'''
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100).
Выведите на экран исходный и отсортированный массивы.
Сортировка должна быть реализована в виде функции.
По возможности доработайте алгоритм (сделайте его умнее).
'''

'''Доработаем алгоритм следующим образом: если за внутренний цикл не произошло перестановки, значит массив отсортирован
и нужно прервать цикл и завершить алгоритм сортировки.
'''
import random
import time

#mas = [random.randint(-100, 100) for _ in range (10)]

# test
mas = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

def bubble_sort_decrease(mas):
    j = 1
    while j < len(mas):
        flag = False
        for i in range(len(mas) - j):
            if mas[i] < mas[i + 1]:
                mas[i], mas[i + 1] = mas[i + 1], mas[i]
                flag = True
        if not flag:
            break
        j += 1
    return mas

print(mas)
a = time.perf_counter()
print(bubble_sort_decrease(mas))
#Время работы алгоритма: 2.9000000000001247e-05
print(f'Время работы алгоритма: {time.perf_counter() - a}')